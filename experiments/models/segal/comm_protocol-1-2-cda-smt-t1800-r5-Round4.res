0 ms: =======================================================================
0 ms: =======================================================================
0 ms: This is Constrained Combinatorial Testing Tool Set
0 ms: Local date and time is: Sun Aug 18 20:43:00 2019
0 ms: =======================================================================
0 ms: =======================================================================
0 ms: SMT Generation
0 ms: Model file: ../models/segal/comm_protocol.txt
0 ms: CDA d is: 1
0 ms: CDA t is: 2
0 ms: Include overline D: false
0 ms: Include overline T: false
0 ms: Symmetry breaking method: NONE
0 ms: Repeat time: 1
0 ms: Timeout for SMT solver(each check): -1 (s)
0 ms: =======================================================================
0 ms: =======================================================================
0 ms: New loop: 1
0 ms: =======================================================================
3 ms: Print system structure
3 ms: ***********************************************************************
3 ms: Parameters are: 
3 ms: [ p1 ] ID: 0 has 2 values.
3 ms: v1( 0 ) / v2( 1 )
3 ms: [ p2 ] ID: 1 has 2 values.
3 ms: v1( 0 ) / v2( 1 )
3 ms: [ p3 ] ID: 2 has 2 values.
3 ms: v1( 0 ) / v2( 1 )
3 ms: [ p4 ] ID: 3 has 2 values.
3 ms: v1( 0 ) / v2( 1 )
3 ms: [ p5 ] ID: 4 has 2 values.
3 ms: v1( 0 ) / v2( 1 )
3 ms: [ p6 ] ID: 5 has 2 values.
3 ms: v1( 0 ) / v2( 1 )
3 ms: [ p7 ] ID: 6 has 2 values.
3 ms: v1( 0 ) / v2( 1 )
3 ms: [ p8 ] ID: 7 has 2 values.
3 ms: true( 0 ) / false( 1 )
3 ms: [ p9 ] ID: 8 has 2 values.
3 ms: true( 0 ) / false( 1 )
3 ms: [ p10 ] ID: 9 has 2 values.
3 ms: true( 0 ) / false( 1 )
3 ms: [ p11 ] ID: 10 has 7 values.
3 ms: v1( 0 ) / v2( 1 ) / v3( 2 ) / v4( 3 ) / v5( 4 ) / v6( 5 ) / v7( 6 )
3 ms: ***********************************************************************
3 ms: Constraints: 
3 ms: [ 0 ]: (if (and (== [5] 0) (== [2] 1) (== [1] 1) (== [10] 3) (== [0] 1) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 1 ]: (if (and (== [6] 1) (== [2] 1) (== [5] 1) (== [10] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 2 ]: (if (and (== [2] 1) (== [1] 1) (== [10] 5) (== [0] 1) (== [4] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 3 ]: (if (and (== [5] 0) (== [0] 0) (== [10] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 4 ]: (if (and (== [6] 1) (== [10] 5) (== [2] 0) (== [5] 1) (== [0] 1) (== [1] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 5 ]: (if (and (== [1] 1) (== [2] 0) (== [4] 0) (== [0] 1) (== [10] 2) (== [7] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 6 ]: (if (and (== [5] 0) (== [2] 1) (== [1] 1) (== [10] 5) (== [0] 1) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 7 ]: (if (and (== [6] 1) (== [10] 6)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 8 ]: (if (and (== [0] 0) (== [3] 1) (== [7] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 9 ]: (if (and (== [6] 1) (== [2] 1) (== [10] 6) (== [5] 1) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 10 ]: (if (and (== [10] 6) (== [2] 0) (== [5] 1) (== [0] 1) (== [1] 0) (== [6] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 11 ]: (if (and (== [10] 5) (== [0] 1) (== [4] 0) (== [1] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 12 ]: (if (and (== [6] 1) (== [1] 1) (== [2] 0) (== [7] 1) (== [5] 1) (== [0] 1) (== [10] 1) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 13 ]: (if (and (== [2] 1) (== [10] 6) (== [5] 1) (== [6] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 14 ]: (if (and (== [5] 0) (== [1] 1) (== [10] 6) (== [2] 0) (== [0] 1) (== [7] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 15 ]: (if (and (== [6] 1) (== [2] 0) (== [5] 1) (== [0] 0) (== [10] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 16 ]: (if (and (== [2] 1) (== [1] 1) (== [10] 3) (== [0] 1) (== [4] 0)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 17 ]: (if (and (== [1] 1) (== [10] 5) (== [2] 0) (== [5] 1) (== [0] 1) (== [6] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 18 ]: (if (and (== [6] 1) (== [2] 0) (== [5] 1) (== [0] 1) (== [10] 1) (== [1] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 19 ]: (if (and (== [1] 1) (== [2] 0) (== [4] 0) (== [0] 1) (== [10] 4) (== [7] 0)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 20 ]: (if (and (== [8] 0) (== [0] 0) (== [3] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 21 ]: (if (and (== [1] 1) (== [2] 0) (== [4] 0) (== [0] 1) (== [10] 1) (== [7] 0)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 22 ]: (if (and (== [5] 0) (== [10] 6) (== [0] 1) (== [1] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 23 ]: (if (and (== [0] 1) (== [4] 0) (== [10] 4) (== [1] 0)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 24 ]: (if (and (== [5] 0) (== [10] 6) (== [0] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 25 ]: (if (and (== [10] 5) (== [2] 0) (== [5] 1) (== [0] 1) (== [1] 0) (== [6] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 26 ]: (if (and (== [5] 0) (== [1] 1) (== [2] 0) (== [0] 1) (== [10] 4) (== [7] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 27 ]: (if (and (== [6] 1) (== [1] 1) (== [2] 0) (== [7] 1) (== [5] 1) (== [0] 1) (== [10] 2) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 28 ]: (if (and (== [8] 0) (== [7] 0)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 29 ]: (if (and (== [1] 1) (== [10] 3) (== [2] 0) (== [4] 0) (== [0] 1) (== [7] 0)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 30 ]: (if (and (== [6] 1) (== [2] 0) (== [5] 1) (== [0] 0) (== [10] 1) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 31 ]: (if (and (== [5] 0) (== [10] 5) (== [0] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 32 ]: (if (and (== [6] 1) (== [1] 1) (== [2] 0) (== [5] 1) (== [0] 1) (== [10] 1) (== [7] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 33 ]: (if (and (== [1] 1) (== [2] 0) (== [5] 1) (== [0] 1) (== [10] 2) (== [6] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 34 ]: (if (and (== [10] 3) (== [2] 0) (== [5] 1) (== [0] 1) (== [1] 0) (== [6] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 35 ]: (if (and (== [6] 1) (== [1] 1) (== [2] 0) (== [5] 1) (== [0] 1) (== [10] 2) (== [7] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 36 ]: (if (and (== [1] 1) (== [2] 0) (== [4] 0) (== [0] 1) (== [10] 0) (== [7] 0)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 37 ]: (if (and (== [6] 1) (== [1] 1) (== [2] 0) (== [5] 1) (== [0] 1) (== [10] 4) (== [7] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 38 ]: (if (and (== [5] 0) (== [10] 3) (== [0] 1) (== [1] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 39 ]: (if (and (== [2] 1) (== [5] 1) (== [10] 1) (== [6] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 40 ]: (if (and (== [5] 0) (== [2] 1) (== [1] 1) (== [0] 1) (== [10] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 41 ]: (if (and (== [5] 0) (== [10] 3) (== [0] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 42 ]: (if (and (== [5] 0) (== [10] 5) (== [0] 1) (== [1] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 43 ]: (if (and (== [6] 1) (== [10] 6) (== [2] 0) (== [5] 1) (== [0] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 44 ]: (if (and (== [2] 0) (== [5] 1) (== [0] 1) (== [10] 2) (== [1] 0) (== [6] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 45 ]: (if (and (== [5] 0) (== [1] 1) (== [2] 0) (== [0] 1) (== [10] 2) (== [7] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 46 ]: (if (and (== [5] 0) (== [1] 1) (== [2] 0) (== [7] 1) (== [0] 1) (== [10] 1) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 47 ]: (if (and (== [1] 1) (== [2] 0) (== [5] 1) (== [0] 1) (== [6] 0) (== [10] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 48 ]: (if (and (== [2] 1) (== [1] 1) (== [0] 1) (== [4] 0) (== [10] 4)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 49 ]: (if (and (== [2] 1) (== [1] 1) (== [0] 1) (== [4] 0) (== [10] 2)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 50 ]: (if (and (== [2] 0) (== [5] 1) (== [0] 0) (== [10] 1) (== [6] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 51 ]: (if (and (== [2] 1) (== [1] 1) (== [0] 1) (== [4] 0) (== [10] 0)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 52 ]: (if (and (== [2] 1) (== [10] 5) (== [5] 1) (== [6] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 53 ]: (if (and (== [0] 1) (== [4] 0) (== [10] 2) (== [1] 0)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 54 ]: (if (and (== [1] 1) (== [10] 3) (== [2] 0) (== [5] 1) (== [0] 1) (== [6] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 55 ]: (if (and (== [6] 1) (== [1] 1) (== [2] 0) (== [7] 1) (== [5] 1) (== [0] 1) (== [10] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 56 ]: (if (and (== [0] 1) (== [4] 0) (== [1] 0) (== [10] 0)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 57 ]: (if (and (== [1] 1) (== [10] 6) (== [2] 0) (== [7] 1) (== [0] 1) (== [4] 0)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 58 ]: (if (and (== [0] 0) (== [4] 0) (== [10] 0)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 59 ]: (if (and (== [5] 0) (== [10] 6)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 60 ]: (if (and (== [6] 1) (== [2] 1) (== [5] 1) (== [10] 1) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 61 ]: (if (and (== [0] 0) (== [4] 0) (== [10] 4)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 62 ]: (if (and (== [8] 0) (== [1] 0) (== [3] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 63 ]: (if (and (== [10] 3) (== [0] 1) (== [4] 0) (== [1] 0)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 64 ]: (if (and (== [5] 0) (== [1] 1) (== [10] 5) (== [2] 0) (== [7] 1) (== [0] 1) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 65 ]: (if (and (== [0] 0) (== [4] 0) (== [10] 2)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 66 ]: (if (and (== [6] 1) (== [1] 1) (== [2] 0) (== [5] 1) (== [0] 1) (== [10] 0) (== [7] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 67 ]: (if (and (== [6] 1) (== [1] 1) (== [10] 6) (== [2] 0) (== [5] 1) (== [0] 1) (== [7] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 68 ]: (if (and (== [1] 1) (== [2] 0) (== [5] 1) (== [0] 1) (== [10] 4) (== [6] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 69 ]: (if (and (== [10] 6) (== [2] 0) (== [5] 1) (== [0] 0) (== [6] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 70 ]: (if (and (== [2] 1) (== [10] 3) (== [5] 1) (== [6] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 71 ]: (if (and (== [6] 1) (== [1] 1) (== [10] 5) (== [2] 0) (== [7] 1) (== [5] 1) (== [0] 1) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 72 ]: (if (and (== [10] 3) (== [0] 0) (== [4] 0)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 73 ]: (if (and (== [5] 0) (== [1] 1) (== [2] 0) (== [7] 1) (== [0] 1) (== [10] 2) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 74 ]: (if (and (== [6] 1) (== [2] 0) (== [5] 1) (== [0] 1) (== [1] 0) (== [10] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 75 ]: (if (and (== [5] 0) (== [1] 1) (== [2] 0) (== [7] 1) (== [0] 1) (== [10] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 76 ]: (if (and (== [1] 1) (== [2] 0) (== [7] 1) (== [0] 1) (== [4] 0) (== [10] 2)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 77 ]: (if (and (== [2] 0) (== [5] 1) (== [0] 0) (== [10] 4) (== [6] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 78 ]: (if (and (== [10] 6) (== [1] 0)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 79 ]: (if (and (== [5] 0) (== [2] 1) (== [1] 1) (== [10] 6) (== [0] 1) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 80 ]: (if (and (== [6] 1) (== [2] 1) (== [10] 5) (== [5] 1) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 81 ]: (if (and (== [1] 1) (== [10] 5) (== [2] 0) (== [7] 1) (== [0] 1) (== [4] 0)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 82 ]: (if (and (== [6] 1) (== [2] 1) (== [5] 1) (== [10] 4) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 83 ]: (if (and (== [10] 5) (== [0] 0) (== [4] 0)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 84 ]: (if (and (== [6] 1) (== [2] 1) (== [10] 3) (== [5] 1) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 85 ]: (if (and (== [2] 1) (== [1] 1) (== [10] 6) (== [0] 1) (== [4] 0)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 86 ]: (if (and (== [5] 0) (== [0] 0) (== [10] 4) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 87 ]: (if (and (== [10] 6) (== [0] 0)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 88 ]: (if (and (== [10] 5) (== [2] 0) (== [5] 1) (== [0] 0) (== [6] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 89 ]: (if (and (== [10] 6) (== [0] 0) (== [4] 0)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 90 ]: (if (and (== [5] 0) (== [2] 1) (== [1] 1) (== [0] 1) (== [10] 2) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 91 ]: (if (and (== [10] 3) (== [2] 0) (== [5] 1) (== [0] 0) (== [6] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 92 ]: (if (and (== [5] 0) (== [1] 1) (== [2] 0) (== [0] 1) (== [10] 0) (== [7] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 93 ]: (if (and (== [2] 0) (== [3] 1) (== [7] 0)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 94 ]: (if (and (== [4] 0) (== [3] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 95 ]: (if (and (== [5] 0) (== [1] 1) (== [10] 3) (== [2] 0) (== [7] 1) (== [0] 1) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 96 ]: (if (and (== [2] 1) (== [10] 6)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 97 ]: (if (and (== [10] 6) (== [4] 0)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 98 ]: (if (and (== [6] 1) (== [2] 0) (== [5] 1) (== [0] 1) (== [10] 4) (== [1] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 99 ]: (if (and (== [5] 0) (== [3] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 100 ]: (if (and (== [6] 1) (== [10] 5) (== [2] 0) (== [5] 1) (== [0] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 101 ]: (if (and (== [8] 0) (== [9] 0)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 102 ]: (if (and (== [2] 1) (== [5] 1) (== [10] 4) (== [6] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 103 ]: (if (and (== [5] 0) (== [0] 0) (== [10] 2) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 104 ]: (if (and (== [5] 0) (== [2] 1) (== [1] 1) (== [0] 1) (== [10] 4) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 105 ]: (if (and (== [5] 0) (== [1] 1) (== [10] 6) (== [2] 0) (== [7] 1) (== [0] 1) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 106 ]: (if (and (== [6] 1) (== [2] 0) (== [5] 1) (== [0] 0) (== [10] 4) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 107 ]: (if (and (== [2] 1) (== [5] 1) (== [10] 2) (== [6] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 108 ]: (if (and (== [1] 1) (== [2] 0) (== [5] 1) (== [0] 1) (== [10] 1) (== [6] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 109 ]: (if (and (== [6] 1) (== [10] 3) (== [2] 0) (== [5] 1) (== [0] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 110 ]: (if (and (== [1] 1) (== [10] 6) (== [2] 0) (== [4] 0) (== [0] 1) (== [7] 0)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 111 ]: (if (and (== [5] 0) (== [1] 1) (== [2] 0) (== [0] 1) (== [10] 1) (== [7] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 112 ]: (if (and (== [5] 0) (== [1] 1) (== [10] 3) (== [2] 0) (== [0] 1) (== [7] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 113 ]: (if (and (== [1] 1) (== [10] 3) (== [2] 0) (== [7] 1) (== [0] 1) (== [4] 0)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 114 ]: (if (and (== [2] 0) (== [5] 1) (== [0] 1) (== [10] 4) (== [1] 0) (== [6] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 115 ]: (if (and (== [10] 6) (== [0] 1) (== [4] 0) (== [1] 0)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 116 ]: (if (and (== [6] 1) (== [1] 1) (== [2] 0) (== [7] 1) (== [5] 1) (== [0] 1) (== [10] 4) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 117 ]: (if (and (== [6] 1) (== [1] 1) (== [10] 3) (== [2] 0) (== [5] 1) (== [0] 1) (== [7] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 118 ]: (if (and (== [6] 1) (== [10] 3) (== [2] 0) (== [5] 1) (== [0] 1) (== [1] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 119 ]: (if (and (== [2] 0) (== [5] 1) (== [0] 0) (== [10] 2) (== [6] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 120 ]: (if (and (== [6] 1) (== [10] 6) (== [2] 0) (== [5] 1) (== [0] 1) (== [1] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 121 ]: (if (and (== [5] 0) (== [0] 1) (== [10] 2) (== [1] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 122 ]: (if (and (== [5] 0) (== [0] 1) (== [10] 4) (== [1] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 123 ]: (if (and (== [5] 0) (== [0] 1) (== [1] 0) (== [10] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 124 ]: (if (and (== [2] 0) (== [5] 1) (== [0] 1) (== [10] 1) (== [1] 0) (== [6] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 125 ]: (if (and (== [1] 1) (== [2] 0) (== [7] 1) (== [0] 1) (== [4] 0) (== [10] 0)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 126 ]: (if (and (== [1] 1) (== [2] 0) (== [7] 1) (== [0] 1) (== [4] 0) (== [10] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: [ 127 ]: (if (and (== [6] 1) (== [1] 1) (== [10] 6) (== [2] 0) (== [7] 1) (== [5] 1) (== [0] 1) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
4 ms: ***********************************************************************
31 ms: The number of all interactions: 320
31 ms: The number of all valid interactions: 285
31 ms: The number of all invalid interactions: 35
34 ms: The number of all interaction sets: 285
34 ms: ***********************************************************************
164 ms: Initial size (CCA size): 54
26733 ms: ***********************************************************************
26734 ms: The number of maskable pairs: 2177
1163393 ms: ***********************************************************************
1163393 ms: size: 54 -> SAT
1163394 ms: ***********************************************************************
1163394 ms: CDA is: 
1163394 ms: | 0 |: v1, v1, v1, v1, v1, v1, v1, false, true, false, v2
1163394 ms: | 1 |: v1, v1, v1, v1, v1, v2, v1, false, true, false, v2
1163394 ms: | 2 |: v1, v1, v1, v1, v2, v2, v1, false, false, true, v1
1163394 ms: | 3 |: v1, v1, v1, v1, v2, v2, v2, false, false, false, v3
1163394 ms: | 4 |: v1, v1, v1, v2, v2, v2, v2, false, false, false, v3
1163394 ms: | 5 |: v1, v1, v2, v1, v2, v2, v2, true, false, true, v3
1163394 ms: | 6 |: v1, v2, v1, v1, v2, v1, v1, false, false, true, v2
1163394 ms: | 7 |: v1, v2, v1, v1, v2, v2, v1, true, false, false, v1
1163394 ms: | 8 |: v1, v2, v1, v1, v2, v2, v2, true, false, false, v3
1163394 ms: | 9 |: v1, v2, v2, v1, v1, v1, v1, false, false, false, v2
1163394 ms: | 10 |: v1, v2, v2, v1, v1, v1, v2, true, false, true, v2
1163394 ms: | 11 |: v1, v2, v2, v1, v1, v2, v1, false, false, true, v2
1163394 ms: | 12 |: v1, v2, v2, v1, v2, v2, v1, false, true, false, v1
1163394 ms: | 13 |: v1, v2, v2, v1, v2, v2, v2, false, true, false, v3
1163394 ms: | 14 |: v1, v2, v2, v2, v2, v2, v1, false, false, true, v1
1163394 ms: | 15 |: v2, v1, v1, v1, v1, v1, v2, true, false, true, v2
1163394 ms: | 16 |: v2, v1, v1, v1, v1, v2, v2, true, false, true, v2
1163394 ms: | 17 |: v2, v1, v1, v1, v2, v2, v1, false, true, false, v1
1163394 ms: | 18 |: v2, v1, v1, v1, v2, v2, v2, false, true, false, v3
1163394 ms: | 19 |: v2, v1, v1, v1, v2, v2, v2, false, false, true, v3
1163394 ms: | 20 |: v2, v1, v1, v2, v2, v2, v1, false, false, false, v1
1163394 ms: | 21 |: v2, v1, v2, v1, v1, v1, v1, false, true, false, v2
1163394 ms: | 22 |: v2, v1, v2, v1, v2, v1, v1, true, false, false, v2
1163394 ms: | 23 |: v2, v1, v2, v2, v2, v2, v1, true, false, true, v1
1163394 ms: | 24 |: v2, v2, v1, v1, v1, v1, v1, true, false, true, v6
1163394 ms: | 25 |: v2, v2, v1, v1, v1, v1, v1, false, true, false, v5
1163394 ms: | 26 |: v2, v2, v1, v1, v1, v1, v1, false, false, true, v5
1163394 ms: | 27 |: v2, v2, v1, v1, v1, v1, v1, false, false, false, v5
1163394 ms: | 28 |: v2, v2, v1, v1, v1, v1, v2, true, false, false, v6
1163394 ms: | 29 |: v2, v2, v1, v1, v1, v2, v1, true, false, false, v6
1163394 ms: | 30 |: v2, v2, v1, v1, v1, v2, v1, false, true, false, v5
1163394 ms: | 31 |: v2, v2, v1, v1, v1, v2, v2, false, true, false, v5
1163394 ms: | 32 |: v2, v2, v1, v1, v1, v2, v2, false, false, true, v5
1163394 ms: | 33 |: v2, v2, v1, v1, v2, v1, v1, true, false, false, v6
1163394 ms: | 34 |: v2, v2, v1, v1, v2, v1, v1, false, true, false, v5
1163394 ms: | 35 |: v2, v2, v1, v1, v2, v1, v1, false, false, true, v5
1163394 ms: | 36 |: v2, v2, v1, v1, v2, v1, v2, false, false, false, v5
1163394 ms: | 37 |: v2, v2, v1, v1, v2, v2, v1, true, false, true, v7
1163394 ms: | 38 |: v2, v2, v1, v1, v2, v2, v1, true, false, false, v7
1163394 ms: | 39 |: v2, v2, v1, v1, v2, v2, v1, false, true, false, v7
1163394 ms: | 40 |: v2, v2, v1, v1, v2, v2, v2, true, false, true, v6
1163394 ms: | 41 |: v2, v2, v1, v1, v2, v2, v2, true, false, false, v6
1163394 ms: | 42 |: v2, v2, v1, v1, v2, v2, v2, false, true, false, v4
1163394 ms: | 43 |: v2, v2, v1, v1, v2, v2, v2, false, false, true, v4
1163394 ms: | 44 |: v2, v2, v1, v1, v2, v2, v2, false, false, false, v4
1163394 ms: | 45 |: v2, v2, v1, v2, v2, v2, v1, false, true, false, v7
1163394 ms: | 46 |: v2, v2, v1, v2, v2, v2, v1, false, false, true, v7
1163394 ms: | 47 |: v2, v2, v1, v2, v2, v2, v2, false, true, false, v4
1163394 ms: | 48 |: v2, v2, v1, v2, v2, v2, v2, false, false, true, v4
1163394 ms: | 49 |: v2, v2, v2, v1, v2, v1, v2, false, true, false, v2
1163394 ms: | 50 |: v2, v2, v2, v2, v2, v2, v1, false, true, false, v1
1163394 ms: | 51 |: v2, v2, v2, v2, v2, v2, v2, true, false, true, v3
1163394 ms: | 52 |: v2, v2, v2, v2, v2, v2, v2, true, false, false, v3
1163394 ms: | 53 |: v2, v2, v2, v2, v2, v2, v2, false, true, false, v3
1163394 ms: ***********************************************************************
1164379 ms: Initial size (CCA size): 53
1191701 ms: ***********************************************************************
1191701 ms: The number of maskable pairs: 2177
