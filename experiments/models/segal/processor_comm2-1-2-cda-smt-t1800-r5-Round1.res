0 ms: =======================================================================
0 ms: =======================================================================
0 ms: This is Constrained Combinatorial Testing Tool Set
0 ms: Local date and time is: Tue Aug 20 00:40:27 2019
0 ms: =======================================================================
0 ms: =======================================================================
0 ms: SMT Generation
0 ms: Model file: ../models/segal/processor_comm2.txt
0 ms: CDA d is: 1
0 ms: CDA t is: 2
0 ms: Include overline D: false
0 ms: Include overline T: false
0 ms: Symmetry breaking method: NONE
0 ms: Repeat time: 1
0 ms: Timeout for SMT solver(each check): -1 (s)
0 ms: =======================================================================
0 ms: =======================================================================
0 ms: New loop: 1
0 ms: =======================================================================
3 ms: Print system structure
3 ms: ***********************************************************************
3 ms: Parameters are: 
3 ms: [ p1 ] ID: 0 has 2 values.
3 ms: v1( 0 ) / v2( 1 )
3 ms: [ p2 ] ID: 1 has 2 values.
3 ms: v1( 0 ) / v2( 1 )
3 ms: [ p3 ] ID: 2 has 3 values.
3 ms: -1( 0 ) / 0( 1 ) / 1( 2 )
3 ms: [ p4 ] ID: 3 has 3 values.
3 ms: -1( 0 ) / 0( 1 ) / 1( 2 )
3 ms: [ p5 ] ID: 4 has 2 values.
3 ms: v1( 0 ) / v2( 1 )
3 ms: [ p6 ] ID: 5 has 5 values.
3 ms: v1( 0 ) / v2( 1 ) / v3( 2 ) / v4( 3 ) / v5( 4 )
3 ms: [ p7 ] ID: 6 has 4 values.
3 ms: v1( 0 ) / v2( 1 ) / v3( 2 ) / v4( 3 )
3 ms: [ p8 ] ID: 7 has 4 values.
3 ms: v1( 0 ) / v2( 1 ) / v3( 2 ) / v4( 3 )
3 ms: [ p9 ] ID: 8 has 3 values.
3 ms: -1( 0 ) / 0( 1 ) / 1( 2 )
3 ms: [ p10 ] ID: 9 has 4 values.
3 ms: v1( 0 ) / v2( 1 ) / v3( 2 ) / v4( 3 )
3 ms: [ p11 ] ID: 10 has 3 values.
3 ms: -1( 0 ) / 0( 1 ) / 1( 2 )
3 ms: [ p12 ] ID: 11 has 4 values.
3 ms: v1( 0 ) / v2( 1 ) / v3( 2 ) / v4( 3 )
3 ms: [ p13 ] ID: 12 has 3 values.
3 ms: -1( 0 ) / 0( 1 ) / 1( 2 )
3 ms: [ p14 ] ID: 13 has 3 values.
3 ms: v1( 0 ) / v2( 1 ) / v3( 2 )
3 ms: [ p15 ] ID: 14 has 3 values.
3 ms: -1( 0 ) / 0( 1 ) / 1( 2 )
3 ms: [ p16 ] ID: 15 has 3 values.
3 ms: -1( 0 ) / 0( 1 ) / 1( 2 )
3 ms: [ p17 ] ID: 16 has 3 values.
3 ms: v1( 0 ) / v2( 1 ) / v3( 2 )
3 ms: [ p18 ] ID: 17 has 5 values.
3 ms: v1( 0 ) / v2( 1 ) / v3( 2 ) / v4( 3 ) / v5( 4 )
3 ms: [ p19 ] ID: 18 has 4 values.
3 ms: v1( 0 ) / v2( 1 ) / v3( 2 ) / v4( 3 )
3 ms: [ p20 ] ID: 19 has 4 values.
3 ms: v1( 0 ) / v2( 1 ) / v3( 2 ) / v4( 3 )
3 ms: [ p21 ] ID: 20 has 3 values.
3 ms: -1( 0 ) / 0( 1 ) / 1( 2 )
3 ms: [ p22 ] ID: 21 has 4 values.
3 ms: v1( 0 ) / v2( 1 ) / v3( 2 ) / v4( 3 )
3 ms: [ p23 ] ID: 22 has 3 values.
3 ms: -1( 0 ) / 0( 1 ) / 1( 2 )
3 ms: [ p24 ] ID: 23 has 4 values.
3 ms: v1( 0 ) / v2( 1 ) / v3( 2 ) / v4( 3 )
3 ms: [ p25 ] ID: 24 has 3 values.
3 ms: -1( 0 ) / 0( 1 ) / 1( 2 )
3 ms: ***********************************************************************
3 ms: Constraints: 
3 ms: [ 0 ]: (if (and (== [9] 2) (== [21] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 1 ]: (if (and (== [7] 2) (== [9] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 2 ]: (if (and (== [9] 3) (== [1] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 3 ]: (if (and (== [13] 0) (== [23] 3)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 4 ]: (if (and (== [23] 0) (== [11] 2)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 5 ]: (if (and (== [6] 2) (== [18] 1)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 6 ]: (if (and (== [13] 0) (== [21] 3)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 7 ]: (if (and (== [19] 3) (== [18] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 8 ]: (if (and (== [23] 2) (== [21] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 9 ]: (if (and (== [6] 3) (== [7] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 10 ]: (if (and (== [21] 2) (== [0] 1)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 11 ]: (if (and (== [6] 3) (== [1] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 12 ]: (if (and (== [18] 3) (== [21] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 13 ]: (if (and (== [7] 0) (== [11] 2)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 14 ]: (if (and (== [6] 2) (== [9] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 15 ]: (if (and (== [6] 2) (== [18] 2)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 16 ]: (if (and (== [0] 1) (== [15] 2)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 17 ]: (if (== [1] 1) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 18 ]: (if (and (== [11] 3) (== [7] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 19 ]: (if (and (== [19] 2) (== [21] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 20 ]: (if (and (== [19] 0) (== [21] 3)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 21 ]: (if (and (== [23] 1) (== [11] 2)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 22 ]: (if (and (== [4] 0) (== [16] 2)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 23 ]: (if (and (== [19] 0) (== [21] 1)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 24 ]: (if (and (== [19] 0) (== [21] 2)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 25 ]: (if (and (== [23] 3) (== [21] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 26 ]: (if (and (== [7] 3) (== [9] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 27 ]: (if (== [2] 2) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 28 ]: (if (and (== [16] 0) (== [0] 1)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 29 ]: (if (and (== [16] 1) (== [4] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 30 ]: (if (and (== [19] 0) (== [7] 2)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 31 ]: (if (and (== [6] 2) (== [1] 1)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 32 ]: (if (and (== [7] 1) (== [11] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 33 ]: (if (and (== [11] 1) (== [9] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 34 ]: (if (and (== [13] 1) (== [19] 2)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 35 ]: (if (and (== [21] 3) (== [23] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 36 ]: (if (and (== [6] 3) (== [9] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 37 ]: (if (and (== [13] 1) (== [18] 2)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 38 ]: (if (and (== [19] 1) (== [21] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 39 ]: (if (and (== [4] 1) (== [16] 2)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 40 ]: (if (and (== [11] 1) (== [6] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 41 ]: (if (and (== [6] 0) (== [9] 2)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 42 ]: (if (and (== [11] 1) (== [7] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 43 ]: (if (and (== [6] 0) (== [9] 1)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 44 ]: (if (and (== [19] 1) (== [7] 2)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 45 ]: (if (and (== [13] 0) (== [18] 3)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 46 ]: (if (and (== [6] 0) (== [11] 2)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 47 ]: (if (and (== [21] 2) (== [23] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 48 ]: (if (and (== [19] 0) (== [23] 1)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 49 ]: (if (and (== [18] 0) (== [23] 3)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 50 ]: (if (and (== [19] 0) (== [23] 2)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 51 ]: (if (and (== [18] 0) (== [23] 2)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 52 ]: (if (and (== [18] 0) (== [23] 1)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 53 ]: (if (and (== [7] 1) (== [9] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 54 ]: (if (and (== [13] 1) (== [21] 2)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 55 ]: (if (and (== [6] 1) (== [9] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 56 ]: (if (and (== [18] 0) (== [6] 2)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 57 ]: (if (and (== [6] 1) (== [11] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 58 ]: (if (and (== [21] 1) (== [0] 1)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 59 ]: (if (and (== [11] 3) (== [9] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 60 ]: (if (and (== [19] 2) (== [7] 2)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 61 ]: (if (and (== [21] 1) (== [23] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 62 ]: (if (and (== [18] 1) (== [23] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 63 ]: (if (and (== [9] 1) (== [11] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 64 ]: (if (and (== [0] 1) (== [21] 3)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 65 ]: (if (and (== [6] 2) (== [11] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 66 ]: (if (and (== [1] 1) (== [11] 2)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 67 ]: (if (and (== [19] 1) (== [23] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 68 ]: (if (and (== [0] 1) (== [14] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 69 ]: (if (and (== [19] 0) (== [23] 3)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 70 ]: (if (and (== [13] 1) (== [23] 2)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 71 ]: (if (and (== [9] 0) (== [11] 2)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 72 ]: (if (and (== [1] 1) (== [9] 2)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 73 ]: (if (and (== [0] 1) (== [19] 2)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 74 ]: (if (and (== [23] 1) (== [21] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 75 ]: (if (and (== [11] 3) (== [1] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 76 ]: (if (and (== [23] 2) (== [0] 1)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 77 ]: (if (and (== [18] 0) (== [21] 1)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 78 ]: (if (and (== [18] 0) (== [21] 2)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 79 ]: (if (and (== [18] 2) (== [23] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 80 ]: (if (and (== [18] 0) (== [21] 3)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 81 ]: (if (and (== [19] 2) (== [23] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 82 ]: (if (and (== [6] 3) (== [11] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 83 ]: (if (and (== [18] 0) (== [19] 2)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 84 ]: (if (and (== [9] 3) (== [6] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 85 ]: (if (and (== [11] 3) (== [6] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 86 ]: (if (and (== [21] 2) (== [9] 2)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 87 ]: (if (and (== [9] 1) (== [7] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 88 ]: (if (and (== [7] 3) (== [1] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 89 ]: (if (and (== [23] 3) (== [0] 1)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 90 ]: (if (and (== [19] 3) (== [0] 1)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 91 ]: (if (and (== [6] 1) (== [7] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 92 ]: (if (and (== [18] 3) (== [23] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 93 ]: (if (and (== [18] 1) (== [21] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 94 ]: (if (and (== [19] 3) (== [21] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 95 ]: (if (== [2] 0) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 96 ]: (if (and (== [9] 3) (== [11] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 97 ]: (if (and (== [16] 1) (== [0] 1)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 98 ]: (if (and (== [23] 2) (== [11] 2)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 99 ]: (if (and (== [13] 1) (== [1] 1)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 100 ]: (if (and (== [19] 3) (== [23] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 101 ]: (if (and (== [14] 2) (== [0] 1)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 102 ]: (if (and (== [19] 1) (== [18] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 103 ]: (if (and (== [7] 3) (== [6] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 104 ]: (if (and (== [21] 1) (== [9] 2)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 105 ]: (if (and (== [9] 2) (== [7] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 106 ]: (if (and (== [7] 2) (== [11] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 107 ]: (if (and (== [13] 0) (== [19] 3)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 108 ]: (if (and (== [16] 0) (== [4] 1)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 109 ]: (if (and (== [6] 0) (== [7] 2)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 110 ]: (if (and (== [6] 2) (== [7] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 111 ]: (if (and (== [7] 1) (== [6] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 112 ]: (if (and (== [18] 2) (== [21] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 113 ]: (if (and (== [13] 0) (== [1] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 114 ]: (if (and (== [9] 2) (== [11] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 115 ]: (if (and (== [1] 1) (== [7] 2)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 116 ]: (if (and (== [0] 1) (== [15] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 117 ]: (if (and (== [9] 3) (== [7] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 118 ]: (if (and (== [7] 3) (== [11] 0)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 119 ]: (if (== [16] 2) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 120 ]: (if (and (== [19] 0) (== [18] 1)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 121 ]: (if (and (== [19] 0) (== [18] 2)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 122 ]: (if (and (== [19] 0) (== [18] 3)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 123 ]: (if (and (== [23] 1) (== [0] 1)) (and (== [0] 0) (not (== [0] 0))))
3 ms: [ 124 ]: (if (and (== [19] 1) (== [0] 1)) (and (== [0] 0) (not (== [0] 0))))
3 ms: ***********************************************************************
263 ms: The number of all interactions: 3379
263 ms: The number of all valid interactions: 2525
263 ms: The number of all invalid interactions: 854
451 ms: The number of all interaction sets: 2525
451 ms: ***********************************************************************
879 ms: Initial size (CCA size): 192
